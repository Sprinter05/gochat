# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Gochat v1

on:
  push:
    tags:
      - "v1.*"

jobs:
  windows:
    runs-on: ubuntu-latest
    steps:
    - name: Set up repository
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.5'
    - name: Install CGO
      run: sudo apt-get install gcc-mingw-w64
    - name: Build all
      run: make all OS=windows ARCH=amd64 -j$(nproc)
    - name: Publish server
      uses: actions/upload-artifact@v4
      with:
        name: gochat-server_windows-amd64
        path: build/gochat-server.exe
    - name: Publish client
      uses: actions/upload-artifact@v4
      with:
        name: gochat-client_windows-amd64
        path: build/gochat-client.exe
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Set up repository
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.5'
    - name: Build all
      run: make all OS=linux ARCH=amd64 -j$(nproc)
    - name: Publish server
      uses: actions/upload-artifact@v4
      with:
        name: gochat-server_linux-amd64
        path: build/gochat-server
    - name: Publish client
      uses: actions/upload-artifact@v4
      with:
        name: gochat-client_linux-amd64
        path: build/gochat-client
  release:
    runs-on: ubuntu-latest
    needs: [windows, linux]
    steps:
    - name: Prepare repository
      uses: actions/checkout@v4
    - name: Prepare folder and script
      run: mkdir artifacts && mv .github/workflows/create_release.sh create.sh && chmod +x create.sh
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Create release file
      run: ./create.sh
    - name: Release
      uses: softprops/action-gh-release@v2 
      if: github.ref_type == 'tag'
      with:
        body_path: RELEASE.txt
        preserve_order: true
        overwrite_files: true
        make_latest: true
        files: |
          artifacts/gocha-client_windows-amd64.tar.gz
          artifacts/gocha-client_linux-amd64.tar.gz
          artifacts/gocha-server_windows-amd64.tar.gz
          artifacts/gocha-server_linux-amd64.tar.gz
